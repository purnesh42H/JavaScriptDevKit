'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var cov_24225ru6mz = function () {
    var path = '/Users/purneshdixit/Documents/JavaScriptDevKit/src/api/baseUrl.js',
        hash = '9c2e75af9e2addd54e5a57b8564b881a4f77f0c5',
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/Users/purneshdixit/Documents/JavaScriptDevKit/src/api/baseUrl.js',
        statementMap: {
            '0': {
                start: {
                    line: 4,
                    column: 4
                },
                end: {
                    line: 4,
                    column: 36
                }
            }
        },
        fnMap: {
            '0': {
                name: 'getBaseUrl',
                decl: {
                    start: {
                        line: 3,
                        column: 24
                    },
                    end: {
                        line: 3,
                        column: 34
                    }
                },
                loc: {
                    start: {
                        line: 3,
                        column: 37
                    },
                    end: {
                        line: 7,
                        column: 1
                    }
                },
                line: 3
            }
        },
        branchMap: {},
        s: {
            '0': 0
        },
        f: {
            '0': 0
        },
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

exports.default = getBaseUrl;
//To point to mock data api

function getBaseUrl() {
    ++cov_24225ru6mz.f[0];
    ++cov_24225ru6mz.s[0];

    return 'http://localhost:3001/';
    //const inDevelopment = window.location.hostname === 'localhost';
    //return inDevelopment ? 'http://localhost:3001/':'/';
}

// To point to production data
/*
export default function getBaseUrl() {
    return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001' : '/';
}

function getQueryStringParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);

    if (!results) return null;
    if (!results[2]) return '';

    return decodeURIComponent(results[2].replace(/\+/g, ""))
}
*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2VVcmwuanMiXSwibmFtZXMiOlsiZ2V0QmFzZVVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBRXdCQSxVO0FBRnhCOztBQUVlLFNBQVNBLFVBQVQsR0FBc0I7QUFBQTtBQUFBOztBQUNqQyxXQUFPLHdCQUFQO0FBQ0E7QUFDQTtBQUNIOztBQUVEO0FBQ0EiLCJmaWxlIjoiYmFzZVVybC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcHVybmVzaGRpeGl0L0RvY3VtZW50cy9KYXZhU2NyaXB0RGV2S2l0L3NyYy9hcGkiLCJzb3VyY2VzQ29udGVudCI6WyIvL1RvIHBvaW50IHRvIG1vY2sgZGF0YSBhcGlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QmFzZVVybCgpIHtcbiAgICByZXR1cm4gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS8nO1xuICAgIC8vY29uc3QgaW5EZXZlbG9wbWVudCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCc7XG4gICAgLy9yZXR1cm4gaW5EZXZlbG9wbWVudCA/ICdodHRwOi8vbG9jYWxob3N0OjMwMDEvJzonLyc7XG59XG5cbi8vIFRvIHBvaW50IHRvIHByb2R1Y3Rpb24gZGF0YVxuLypcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEJhc2VVcmwoKSB7XG4gICAgcmV0dXJuIGdldFF1ZXJ5U3RyaW5nUGFyYW1ldGVyQnlOYW1lKCd1c2VNb2NrQXBpJykgPyAnaHR0cDovL2xvY2FsaG9zdDozMDAxJyA6ICcvJztcbn1cblxuZnVuY3Rpb24gZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXJCeU5hbWUobmFtZSwgdXJsKSB7XG4gICAgaWYgKCF1cmwpIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csIFwiXFxcXCQmXCIpO1xuICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoXCJbPyZdXCIgKyBuYW1lICsgXCIoPShbXiYjXSopfCZ8I3wkKVwiKSxcbiAgICAgICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcblxuICAgIGlmICghcmVzdWx0cykgcmV0dXJuIG51bGw7XG4gICAgaWYgKCFyZXN1bHRzWzJdKSByZXR1cm4gJyc7XG5cbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHJlc3VsdHNbMl0ucmVwbGFjZSgvXFwrL2csIFwiXCIpKVxufVxuKi8iXX0=