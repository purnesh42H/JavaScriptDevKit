'use strict';

var cov_13lmm8am52 = function () {
    var path = '/Users/purneshdixit/Documents/JavaScriptDevKit/src/index.test.js',
        hash = 'd43203a8e91c29b9a86d5368560cc2c959262ffc',
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/Users/purneshdixit/Documents/JavaScriptDevKit/src/index.test.js',
        statementMap: {
            '0': {
                start: {
                    line: 5,
                    column: 0
                },
                end: {
                    line: 15,
                    column: 3
                }
            },
            '1': {
                start: {
                    line: 6,
                    column: 4
                },
                end: {
                    line: 14,
                    column: 7
                }
            },
            '2': {
                start: {
                    line: 7,
                    column: 22
                },
                end: {
                    line: 7,
                    column: 66
                }
            },
            '3': {
                start: {
                    line: 8,
                    column: 8
                },
                end: {
                    line: 13,
                    column: 11
                }
            },
            '4': {
                start: {
                    line: 9,
                    column: 23
                },
                end: {
                    line: 9,
                    column: 68
                }
            },
            '5': {
                start: {
                    line: 10,
                    column: 12
                },
                end: {
                    line: 10,
                    column: 51
                }
            },
            '6': {
                start: {
                    line: 11,
                    column: 12
                },
                end: {
                    line: 11,
                    column: 19
                }
            },
            '7': {
                start: {
                    line: 12,
                    column: 12
                },
                end: {
                    line: 12,
                    column: 27
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 5,
                        column: 23
                    },
                    end: {
                        line: 5,
                        column: 24
                    }
                },
                loc: {
                    start: {
                        line: 5,
                        column: 29
                    },
                    end: {
                        line: 15,
                        column: 1
                    }
                },
                line: 5
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 6,
                        column: 36
                    },
                    end: {
                        line: 6,
                        column: 37
                    }
                },
                loc: {
                    start: {
                        line: 6,
                        column: 46
                    },
                    end: {
                        line: 14,
                        column: 5
                    }
                },
                line: 6
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 8,
                        column: 25
                    },
                    end: {
                        line: 8,
                        column: 26
                    }
                },
                loc: {
                    start: {
                        line: 8,
                        column: 48
                    },
                    end: {
                        line: 13,
                        column: 9
                    }
                },
                line: 8
            }
        },
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0
        },
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var _chai = require('chai');

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _jsdom = require('jsdom');

var _jsdom2 = _interopRequireDefault(_jsdom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

++cov_13lmm8am52.s[0];


describe('index.html', function () {
    ++cov_13lmm8am52.f[0];
    ++cov_13lmm8am52.s[1];

    it('Should h1 that says Users', function (done) {
        ++cov_13lmm8am52.f[1];

        var index = (++cov_13lmm8am52.s[2], _fs2.default.readFileSync('./src/index.html', "utf-8"));
        ++cov_13lmm8am52.s[3];
        _jsdom2.default.env(index, function (err, window) {
            ++cov_13lmm8am52.f[2];

            var h1 = (++cov_13lmm8am52.s[4], window.document.getElementsByTagName('h1')[0]);
            ++cov_13lmm8am52.s[5];
            (0, _chai.expect)(h1.innerHTML).to.equal("Users");
            ++cov_13lmm8am52.s[6];
            done();
            ++cov_13lmm8am52.s[7];
            window.close();
        });
    });
});

////"test": "test mocha --reporter progress buildScripts/testSetup.js \"src/**/*.test.js\"",
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsImRvbmUiLCJpbmRleCIsInJlYWRGaWxlU3luYyIsImVudiIsImVyciIsIndpbmRvdyIsImgxIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImlubmVySFRNTCIsInRvIiwiZXF1YWwiLCJjbG9zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7QUFFQUEsU0FBUyxZQUFULEVBQXVCLFlBQU07QUFBQTtBQUFBOztBQUN6QkMsT0FBRywyQkFBSCxFQUFnQyxVQUFDQyxJQUFELEVBQVU7QUFBQTs7QUFDdEMsWUFBTUMsZ0NBQVEsYUFBR0MsWUFBSCxDQUFnQixrQkFBaEIsRUFBb0MsT0FBcEMsQ0FBUixDQUFOO0FBRHNDO0FBRXRDLHdCQUFNQyxHQUFOLENBQVVGLEtBQVYsRUFBaUIsVUFBVUcsR0FBVixFQUFlQyxNQUFmLEVBQXVCO0FBQUE7O0FBQ3BDLGdCQUFNQyw2QkFBS0QsT0FBT0UsUUFBUCxDQUFnQkMsb0JBQWhCLENBQXFDLElBQXJDLEVBQTJDLENBQTNDLENBQUwsQ0FBTjtBQURvQztBQUVwQyw4QkFBT0YsR0FBR0csU0FBVixFQUFxQkMsRUFBckIsQ0FBd0JDLEtBQXhCLENBQThCLE9BQTlCO0FBRm9DO0FBR3BDWDtBQUhvQztBQUlwQ0ssbUJBQU9PLEtBQVA7QUFDSCxTQUxEO0FBTUgsS0FSRDtBQVNILENBVkQ7O0FBWUEiLCJmaWxlIjoiaW5kZXgudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcHVybmVzaGRpeGl0L0RvY3VtZW50cy9KYXZhU2NyaXB0RGV2S2l0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZXhwZWN0fSBmcm9tICdjaGFpJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQganNkb20gZnJvbSAnanNkb20nO1xuXG5kZXNjcmliZSgnaW5kZXguaHRtbCcsICgpID0+IHtcbiAgICBpdCgnU2hvdWxkIGgxIHRoYXQgc2F5cyBVc2VycycsIChkb25lKSA9PiB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZnMucmVhZEZpbGVTeW5jKCcuL3NyYy9pbmRleC5odG1sJywgXCJ1dGYtOFwiKTtcbiAgICAgICAganNkb20uZW52KGluZGV4LCBmdW5jdGlvbiAoZXJyLCB3aW5kb3cpIHtcbiAgICAgICAgICAgIGNvbnN0IGgxID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoMScpWzBdXG4gICAgICAgICAgICBleHBlY3QoaDEuaW5uZXJIVE1MKS50by5lcXVhbChcIlVzZXJzXCIpO1xuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgd2luZG93LmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbi8vLy9cInRlc3RcIjogXCJ0ZXN0IG1vY2hhIC0tcmVwb3J0ZXIgcHJvZ3Jlc3MgYnVpbGRTY3JpcHRzL3Rlc3RTZXR1cC5qcyBcXFwic3JjLyoqLyoudGVzdC5qc1xcXCJcIiwiXX0=