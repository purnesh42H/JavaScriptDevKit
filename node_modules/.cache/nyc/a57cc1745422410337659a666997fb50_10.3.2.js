'use strict';

var cov_bxva104f4 = function () {
    var path = '/Users/purneshdixit/Documents/JavaScriptDevKit/src/index.js',
        hash = '54726ac2955e6a673f989bc42fa0eda2c9b814c0',
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/Users/purneshdixit/Documents/JavaScriptDevKit/src/index.js',
        statementMap: {
            '0': {
                start: {
                    line: 7,
                    column: 0
                },
                end: {
                    line: 35,
                    column: 3
                }
            },
            '1': {
                start: {
                    line: 8,
                    column: 20
                },
                end: {
                    line: 8,
                    column: 22
                }
            },
            '2': {
                start: {
                    line: 10,
                    column: 4
                },
                end: {
                    line: 18,
                    column: 7
                }
            },
            '3': {
                start: {
                    line: 11,
                    column: 8
                },
                end: {
                    line: 17,
                    column: 18
                }
            },
            '4': {
                start: {
                    line: 20,
                    column: 4
                },
                end: {
                    line: 20,
                    column: 66
                }
            },
            '5': {
                start: {
                    line: 22,
                    column: 24
                },
                end: {
                    line: 22,
                    column: 76
                }
            },
            '6': {
                start: {
                    line: 26,
                    column: 4
                },
                end: {
                    line: 34,
                    column: 7
                }
            },
            '7': {
                start: {
                    line: 27,
                    column: 8
                },
                end: {
                    line: 33,
                    column: 9
                }
            },
            '8': {
                start: {
                    line: 28,
                    column: 28
                },
                end: {
                    line: 28,
                    column: 40
                }
            },
            '9': {
                start: {
                    line: 29,
                    column: 12
                },
                end: {
                    line: 29,
                    column: 35
                }
            },
            '10': {
                start: {
                    line: 30,
                    column: 12
                },
                end: {
                    line: 30,
                    column: 60
                }
            },
            '11': {
                start: {
                    line: 31,
                    column: 24
                },
                end: {
                    line: 31,
                    column: 53
                }
            },
            '12': {
                start: {
                    line: 32,
                    column: 12
                },
                end: {
                    line: 32,
                    column: 44
                }
            },
            '13': {
                start: {
                    line: 37,
                    column: 20
                },
                end: {
                    line: 37,
                    column: 51
                }
            },
            '14': {
                start: {
                    line: 38,
                    column: 0
                },
                end: {
                    line: 38,
                    column: 58
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 7,
                        column: 16
                    },
                    end: {
                        line: 7,
                        column: 17
                    }
                },
                loc: {
                    start: {
                        line: 7,
                        column: 26
                    },
                    end: {
                        line: 35,
                        column: 1
                    }
                },
                line: 7
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 10,
                        column: 19
                    },
                    end: {
                        line: 10,
                        column: 20
                    }
                },
                loc: {
                    start: {
                        line: 10,
                        column: 27
                    },
                    end: {
                        line: 18,
                        column: 5
                    }
                },
                line: 10
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 26,
                        column: 28
                    },
                    end: {
                        line: 26,
                        column: 29
                    }
                },
                loc: {
                    start: {
                        line: 26,
                        column: 36
                    },
                    end: {
                        line: 34,
                        column: 5
                    }
                },
                line: 26
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 27,
                        column: 23
                    },
                    end: {
                        line: 27,
                        column: 24
                    }
                },
                loc: {
                    start: {
                        line: 27,
                        column: 40
                    },
                    end: {
                        line: 33,
                        column: 9
                    }
                },
                line: 27
            }
        },
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0
        },
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

require('./index.css');

var _numeral = require('numeral');

var _numeral2 = _interopRequireDefault(_numeral);

var _userApi = require('./api/userApi');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-console */
// Populate table of users via API call
++cov_bxva104f4.s[0];
(0, _userApi.getUsers)().then(function (result) {
    ++cov_bxva104f4.f[0];

    var usersBody = (++cov_bxva104f4.s[1], "");

    ++cov_bxva104f4.s[2];
    result.forEach(function (user) {
        ++cov_bxva104f4.f[1];
        ++cov_bxva104f4.s[3];

        usersBody += '<tr>\n            <td><a href="#" data-id="' + user.id + '" class="deleteUser">Delete</a></td>\n            <td>' + user.id + '</td>\n            <td>' + user.firstName + '</td>\n            <td>' + user.lastName + '</td>\n            <td>' + user.email + '</td>\n            </tr>';
    });

    ++cov_bxva104f4.s[4];
    global.document.getElementById('users').innerHTML = usersBody;

    var deleteLinks = (++cov_bxva104f4.s[5], global.document.getElementsByClassName('deleteUser'));

    // Must use array from to create a real array from a DOM collection
    // getElementsByClassName only returns an "array like" object
    ++cov_bxva104f4.s[6];
    Array.from(deleteLinks, function (link) {
        ++cov_bxva104f4.f[2];
        ++cov_bxva104f4.s[7];

        link.onclick = function (event) {
            ++cov_bxva104f4.f[3];

            var element = (++cov_bxva104f4.s[8], event.target);
            ++cov_bxva104f4.s[9];
            event.preventDefault();
            ++cov_bxva104f4.s[10];
            (0, _userApi.deleteUser)(element.attributes["data-id"].value);
            var row = (++cov_bxva104f4.s[11], element.parentNode.parentNode);
            ++cov_bxva104f4.s[12];
            row.parentNode.removeChild(row);
        };
    });
});

var courseValue = (++cov_bxva104f4.s[13], (0, _numeral2.default)(1000).format('$0,0.00'));
++cov_bxva104f4.s[14];
console.log('I would pay ' + courseValue + ' to own this Kit');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRoZW4iLCJ1c2Vyc0JvZHkiLCJyZXN1bHQiLCJmb3JFYWNoIiwidXNlciIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsImdsb2JhbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJkZWxldGVMaW5rcyIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJBcnJheSIsImZyb20iLCJsaW5rIiwib25jbGljayIsImV2ZW50IiwiZWxlbWVudCIsInRhcmdldCIsInByZXZlbnREZWZhdWx0IiwiYXR0cmlidXRlcyIsInZhbHVlIiwicm93IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiY291cnNlVmFsdWUiLCJmb3JtYXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTtBQUNBOztBQUNBLHlCQUFXQSxJQUFYLENBQWdCLGtCQUFVO0FBQUE7O0FBQ3RCLFFBQUlDLG1DQUFZLEVBQVosQ0FBSjs7QUFEc0I7QUFHdEJDLFdBQU9DLE9BQVAsQ0FBZSxnQkFBUTtBQUFBO0FBQUE7O0FBQ25CRixxRUFDK0JHLEtBQUtDLEVBRHBDLDhEQUVVRCxLQUFLQyxFQUZmLCtCQUdVRCxLQUFLRSxTQUhmLCtCQUlVRixLQUFLRyxRQUpmLCtCQUtVSCxLQUFLSSxLQUxmO0FBT0gsS0FSRDs7QUFIc0I7QUFhdEJDLFdBQU9DLFFBQVAsQ0FBZ0JDLGNBQWhCLENBQStCLE9BQS9CLEVBQXdDQyxTQUF4QyxHQUFvRFgsU0FBcEQ7O0FBRUEsUUFBTVkscUNBQWNKLE9BQU9DLFFBQVAsQ0FBZ0JJLHNCQUFoQixDQUF1QyxZQUF2QyxDQUFkLENBQU47O0FBRUE7QUFDQTtBQWxCc0I7QUFtQnRCQyxVQUFNQyxJQUFOLENBQVdILFdBQVgsRUFBd0IsZ0JBQVE7QUFBQTtBQUFBOztBQUM1QkksYUFBS0MsT0FBTCxHQUFlLFVBQVVDLEtBQVYsRUFBaUI7QUFBQTs7QUFDNUIsZ0JBQU1DLGlDQUFVRCxNQUFNRSxNQUFoQixDQUFOO0FBRDRCO0FBRTVCRixrQkFBTUcsY0FBTjtBQUY0QjtBQUc1QixxQ0FBV0YsUUFBUUcsVUFBUixDQUFtQixTQUFuQixFQUE4QkMsS0FBekM7QUFDQSxnQkFBTUMsOEJBQU1MLFFBQVFNLFVBQVIsQ0FBbUJBLFVBQXpCLENBQU47QUFKNEI7QUFLNUJELGdCQUFJQyxVQUFKLENBQWVDLFdBQWYsQ0FBMkJGLEdBQTNCO0FBQ0gsU0FORDtBQU9ILEtBUkQ7QUFTSCxDQTVCRDs7QUE4QkEsSUFBTUcsc0NBQWMsdUJBQVEsSUFBUixFQUFjQyxNQUFkLENBQXFCLFNBQXJCLENBQWQsQ0FBTjs7QUFDQUMsUUFBUUMsR0FBUixrQkFBMkJILFdBQTNCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wdXJuZXNoZGl4aXQvRG9jdW1lbnRzL0phdmFTY3JpcHREZXZLaXQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5pbXBvcnQgbnVtZXJhbCBmcm9tICdudW1lcmFsJztcbmltcG9ydCB7Z2V0VXNlcnMsIGRlbGV0ZVVzZXJ9IGZyb20gJy4vYXBpL3VzZXJBcGknO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4vLyBQb3B1bGF0ZSB0YWJsZSBvZiB1c2VycyB2aWEgQVBJIGNhbGxcbmdldFVzZXJzKCkudGhlbihyZXN1bHQgPT4ge1xuICAgIGxldCB1c2Vyc0JvZHkgPSBcIlwiO1xuXG4gICAgcmVzdWx0LmZvckVhY2godXNlciA9PiB7XG4gICAgICAgIHVzZXJzQm9keSArPSBgPHRyPlxuICAgICAgICAgICAgPHRkPjxhIGhyZWY9XCIjXCIgZGF0YS1pZD1cIiR7dXNlci5pZH1cIiBjbGFzcz1cImRlbGV0ZVVzZXJcIj5EZWxldGU8L2E+PC90ZD5cbiAgICAgICAgICAgIDx0ZD4ke3VzZXIuaWR9PC90ZD5cbiAgICAgICAgICAgIDx0ZD4ke3VzZXIuZmlyc3ROYW1lfTwvdGQ+XG4gICAgICAgICAgICA8dGQ+JHt1c2VyLmxhc3ROYW1lfTwvdGQ+XG4gICAgICAgICAgICA8dGQ+JHt1c2VyLmVtYWlsfTwvdGQ+XG4gICAgICAgICAgICA8L3RyPmBcbiAgICB9KTtcblxuICAgIGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlcnMnKS5pbm5lckhUTUwgPSB1c2Vyc0JvZHk7XG5cbiAgICBjb25zdCBkZWxldGVMaW5rcyA9IGdsb2JhbC5kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkZWxldGVVc2VyJyk7XG5cbiAgICAvLyBNdXN0IHVzZSBhcnJheSBmcm9tIHRvIGNyZWF0ZSBhIHJlYWwgYXJyYXkgZnJvbSBhIERPTSBjb2xsZWN0aW9uXG4gICAgLy8gZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSBvbmx5IHJldHVybnMgYW4gXCJhcnJheSBsaWtlXCIgb2JqZWN0XG4gICAgQXJyYXkuZnJvbShkZWxldGVMaW5rcywgbGluayA9PiB7XG4gICAgICAgIGxpbmsub25jbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBkZWxldGVVc2VyKGVsZW1lbnQuYXR0cmlidXRlc1tcImRhdGEtaWRcIl0udmFsdWUpO1xuICAgICAgICAgICAgY29uc3Qgcm93ID0gZWxlbWVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICByb3cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChyb3cpO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxuY29uc3QgY291cnNlVmFsdWUgPSBudW1lcmFsKDEwMDApLmZvcm1hdCgnJDAsMC4wMCcpO1xuY29uc29sZS5sb2coYEkgd291bGQgcGF5ICR7Y291cnNlVmFsdWV9IHRvIG93biB0aGlzIEtpdGApOyJdfQ==